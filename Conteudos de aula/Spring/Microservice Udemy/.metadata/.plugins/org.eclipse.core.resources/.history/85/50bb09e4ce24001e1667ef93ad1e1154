package org.bitbucket.MatheusFSantos.hrworker.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import org.bitbucket.MatheusFSantos.hrworker.model.domain.Worker;
import org.bitbucket.MatheusFSantos.hrworker.model.service.WorkerService;

import java.util.List;
import java.util.UUID;
import java.util.Optional;

@RestController
@RequestMapping("/api/workers")
public class WorkerController {
	
	@Autowired
	private WorkerService workerService;
	
	@GetMapping
	public ResponseEntity<?> findAll() {
		List<Worker> workers = this.workerService.findAll();
		
		if(!workers.isEmpty())
			return ResponseEntity.ok().body(workers);
		
		return ResponseEntity.notFound().build();
	}
	
	@GetMapping(params="id")
	public ResponseEntity<?> findById(@RequestParam(name="id", required=true) UUID id) {
		Optional<Worker> worker = this.workerService.findById(id);
		
		if(worker.isPresent())
			return ResponseEntity.ok().body(worker.get());
		
		return ResponseEntity.notFound().build();
	}
}
